<?xml version="1.0" encoding="UTF-8"?>

<!-- 
The very first version of this pom.xml file was generated using
the Spring "initialz": https://start.spring.io/
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.google</groupId>
	<artifactId>cloud-client-api</artifactId>
	<version>0.0.0-SNAPSHOT</version>
	<name>cloud-client-api</name>
	<description>Terraform Cloud Client API</description>
	
	<properties>
		<java.version>17</java.version>
	</properties>
	
	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.7</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.7</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<!-- slf stands for "Simple Logging Facade" -->
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>2.7</version>
		</dependency>

		<!-- Google Cloud Storage -->
		<dependency>
			<groupId>com.google.cloud</groupId>
			<artifactId>google-cloud-storage</artifactId>
			<version>2.36.1</version>
		</dependency>

		<!-- Gson is used to convert objects to/from JSON strings. -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.10.1</version>
		</dependency>

		<!-- Apache Commons CSV is used for parsing CSV. -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<version>1.9.0</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<!-- Build the Spring Boot web application. -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!--- Build a separate JAR file for the processing job. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.3.0</version>
				<executions>
				<execution>
					<id>ProcessingJob</id>
					<goals><goal>jar</goal></goals>
					<phase>package</phase>
					<configuration>
					<classifier>processingjob</classifier>
					<archive>
						<manifest>
						<addClasspath>true</addClasspath>
						<mainClass>com.google.cloudclientapi.ProcessingJob</mainClass>
						</manifest>
					</archive>
					</configuration>
				</execution>
				</executions>
			</plugin>

			<!-- Configure linter to enforce Google's Java style guide. -->
			<plugin>
                <groupId>com.spotify.fmt</groupId>
                <artifactId>fmt-maven-plugin</artifactId>
                <version>2.22.1</version>
				<configuration>
					<style>google</style>
					<verbose>true</verbose>
				</configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
							<!-- Using <goal>format</goal> instead will auto-format/fix your code as you build. -->
							<!-- Alternatively, to auto-format/fix your code, run: mvn com.spotify.fmt:fmt-maven-plugin:format -->
							<!-- Unlike <goal>format</goal>, <goal>check</goal> runs during "mvn verify". -->
                        </goals>
                    </execution>
                </executions>
            </plugin>

		</plugins>
	</build>

</project>
